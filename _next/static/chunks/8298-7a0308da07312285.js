"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8298],{68535:function(f,e,a){let t;a.d(e,{l6:function(){return getBvaultEpochYtPrices},_c:function(){return getBvaultsPtSynthetic},cb:function(){return getLntVaultEpochYtPrices},mq:function(){return getLntVaultNftStatByUser},Sr:function(){return getLntVaultsDeposited},ZK:function(){return getNftTokensIdsByUser},LJ:function(){return getTokenPricesBySymbol}});var n=a(35004),b=a(73216),d=a(22139),r=a(44769),l=a(83606);let instance=()=>{let f=b.Af.find(f=>f.id==(0,b.BV)()),e=(d.Sz||null!=f&&f.testnet,"https://story-api.".concat(r.Kh.value));return t&&t.defaults.baseURL===e||(t=l.Z.create({baseURL:e,timeout:1e4,headers:{"Content-Type":"application/json"}})),t};var i={get:async function(f){var e;let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(f.startsWith("/auth")){let f=localStorage.getItem("earlyaccess-token");if(!f)throw"Need token";t.headers={...t.headers||{},Authorization:f}}let n=await instance().get(f,{...t,params:a});if(console.info("res:",null==n?void 0:n.data),(null==n?void 0:null===(e=n.data)||void 0===e?void 0:e.code)!==200)throw n.data;return n.data.data},post:async function(f){var e;let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(f.startsWith("/auth")){let f=localStorage.getItem("earlyaccess-token");if(!f)throw"Need token";t.headers={...t.headers||{},Authorization:f}}let n=await instance().post(f,a,t);if((null==n?void 0:null===(e=n.data)||void 0===e?void 0:e.code)!==200)throw n.data;return n.data.data}};a(26361);let getBvaultEpochYtPrices=(f,e)=>i.get("/api/bvault/getEpochYTPrices/".concat(f,"/").concat(e)),getLntVaultEpochYtPrices=(f,e)=>i.get("/api/lntvault/getEpochYTPrices/".concat(f,"/").concat(e)),getBvaultsPtSynthetic=function(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return i.post("/api/bvault/batchGetEpochPtSynthetic",{bvaults:f})},getLntVaultsDeposited=f=>i.post("/api/lntvault/batchNfts",{vaults:f}),getLntVaultNftStatByUser=(f,e)=>i.get("/api/lntvault/".concat(f,"/").concat(e,"/nftstat")),getNftTokensIdsByUser=(f,e)=>i.post("/api/nft/".concat(e,"/tokenIds"),{tokens:f}),getTokenPricesBySymbol=function(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["IP"];return l.Z.get("https://api.g.alchemy.com/prices/v1/7UXJgo01vxWHLJDk09Y0qZct8Y3zMDbX/tokens/by-symbol?".concat(f.map(f=>"symbols="+f).join("&"))).then(f=>f.data.data.filter(f=>f.prices.length).map(f=>({symbol:f.symbol,price:(0,n.f)(f.prices[0].value)})))}},44020:function(f,e,a){a.d(e,{P:function(){return t}});let t={}},8298:function(f,e,a){a.d(e,{w:function(){return B},o:function(){return useStore}});var t=a(83978),n=a.n(t),b=a(64103),d=a(93108),r=a(38894),l=a(68535),i=a(45236),o=a(67541),s=a(78403),u=a(73216),c=a(44020),p=a(22139),y=a(26361);let m=[{type:"function",name:"queryBVault",inputs:[{name:"vault",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple",internalType:"struct BVault",components:[{name:"epochCount",type:"uint256",internalType:"uint256"},{name:"pTokenTotal",type:"uint256",internalType:"uint256"},{name:"lockedAssetTotal",type:"uint256",internalType:"uint256"},{name:"f2",type:"uint256",internalType:"uint256"},{name:"closed",type:"bool",internalType:"bool"},{name:"lpLiq",type:"uint256",internalType:"uint256"},{name:"lpBase",type:"uint256",internalType:"uint256"},{name:"lpQuote",type:"uint256",internalType:"uint256"},{name:"Y",type:"uint256",internalType:"uint256"},{name:"current",type:"tuple",internalType:"struct BVaultEpoch",components:[{name:"epochId",type:"uint256",internalType:"uint256"},{name:"startTime",type:"uint256",internalType:"uint256"},{name:"duration",type:"uint256",internalType:"uint256"},{name:"redeemPool",type:"address",internalType:"address"},{name:"yTokenTotal",type:"uint256",internalType:"uint256"},{name:"vaultYTokenBalance",type:"uint256",internalType:"uint256"},{name:"assetTotalSwapAmount",type:"uint256",internalType:"uint256"},{name:"yTokenAmountForSwapYT",type:"uint256",internalType:"uint256"},{name:"totalRedeemingBalance",type:"uint256",internalType:"uint256"},{name:"settled",type:"bool",internalType:"bool"},{name:"stakingBribesPool",type:"address",internalType:"address"},{name:"adhocBribesPool",type:"address",internalType:"address"}]}]}],stateMutability:"view"},{type:"function",name:"queryBVaultEpoch",inputs:[{name:"vault",type:"address",internalType:"address"},{name:"epochId",type:"uint256",internalType:"uint256"}],outputs:[{name:"",type:"tuple",internalType:"struct BVaultEpoch",components:[{name:"epochId",type:"uint256",internalType:"uint256"},{name:"startTime",type:"uint256",internalType:"uint256"},{name:"duration",type:"uint256",internalType:"uint256"},{name:"redeemPool",type:"address",internalType:"address"},{name:"yTokenTotal",type:"uint256",internalType:"uint256"},{name:"vaultYTokenBalance",type:"uint256",internalType:"uint256"},{name:"assetTotalSwapAmount",type:"uint256",internalType:"uint256"},{name:"yTokenAmountForSwapYT",type:"uint256",internalType:"uint256"},{name:"totalRedeemingBalance",type:"uint256",internalType:"uint256"},{name:"settled",type:"bool",internalType:"bool"},{name:"stakingBribesPool",type:"address",internalType:"address"},{name:"adhocBribesPool",type:"address",internalType:"address"}]}],stateMutability:"view"},{type:"function",name:"queryBVaultEpochUser",inputs:[{name:"vault",type:"address",internalType:"address"},{name:"epochId",type:"uint256",internalType:"uint256"},{name:"user",type:"address",internalType:"address"}],outputs:[{name:"bveu",type:"tuple",internalType:"struct BVaultEpochUser",components:[{name:"epochId",type:"uint256",internalType:"uint256"},{name:"sBribes",type:"tuple[]",internalType:"struct MBribeInfo[]",components:[{name:"epochId",type:"uint256",internalType:"uint256"},{name:"bribeToken",type:"address",internalType:"address"},{name:"bribeAmount",type:"uint256",internalType:"uint256"},{name:"bribeSymbol",type:"string",internalType:"string"},{name:"bribeTotalAmount",type:"uint256",internalType:"uint256"}]},{name:"aBribes",type:"tuple[]",internalType:"struct MBribeInfo[]",components:[{name:"epochId",type:"uint256",internalType:"uint256"},{name:"bribeToken",type:"address",internalType:"address"},{name:"bribeAmount",type:"uint256",internalType:"uint256"},{name:"bribeSymbol",type:"string",internalType:"string"},{name:"bribeTotalAmount",type:"uint256",internalType:"uint256"}]},{name:"redeemingBalance",type:"uint256",internalType:"uint256"},{name:"claimableAssetBalance",type:"uint256",internalType:"uint256"},{name:"userBalanceYToken",type:"uint256",internalType:"uint256"},{name:"userBalanceYTokenSyntyetic",type:"uint256",internalType:"uint256"},{name:"userClaimableYTokenSyntyetic",type:"uint256",internalType:"uint256"}]}],stateMutability:"view"}];var T=a(62531);a(87031);var h=a(19757),v=a(58714);let g=function(f){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(a,t)=>n().mapValues(f,(f,n)=>f(f=>a({[n]:{...t()[n],...f}}),()=>t()[n],e[n]))}({sliceBVaultsStore:function(f,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},getBvaultLpData=async(f,e)=>{let a=e.asset,[[t,n],b]=await Promise.all([f.readContract({abi:r.hd,address:"0x4Be03f781C497A489E3cB0287833452cA9B9E80B",functionName:"getPoolTokens",args:[c.P[a].poolId]}),f.readContract({abi:r.IB,address:a,functionName:c.P[a].isStable?"getActualSupply":"totalSupply"})]),d=t.findIndex(f=>f==c.P[a].base),l=t.findIndex(f=>f==c.P[a].quote);return{lp:a,vault:e.vault,baseBalance:n[d],quoteBalance:n[l],totalSupply:b}},updateBvaults=async a=>{let t=n().now();console.info("timeStart:updateBvaults",t);let b=(0,s.B)(),[d,l,T]=await Promise.all([Promise.all(a.map(f=>b.readContract({abi:f.isOld?r.VH:m,code:"",functionName:"queryBVault",args:[f.vault]}).then(e=>({vault:f.vault,item:e})))),u.yg.id==(0,u.BV)()?Promise.all(a.map(f=>{var e;return(null===(e=c.P[f.asset])||void 0===e?void 0:e.poolId)?getBvaultLpData(b,f):Promise.resolve(null)})):Promise.resolve(null),Promise.all(a.map(f=>f.pTokenV2?b.readContract({abi:[(0,i.s)("function rebaseRate() view returns (uint256)")],address:f.pToken,functionName:"rebaseRate"}):0n))]);console.info("updateBVaults:",T);let h=n().filter(d,f=>null!=f).reduce((f,e,a)=>({...f,[e.vault]:{...e.item,ptRebaseRate:T[a]}}),{});if(l){for(let f of l)if(f){let e=h[f.vault];e.lpLiq=e.lockedAssetTotal;let a=e.lpLiq*p.Pq/f.totalSupply;e.lpBase=(0,y.UA)(f.baseBalance*a/p.Pq,c.P[f.lp].baseDecimal),e.lpQuote=(0,y.UA)(f.quoteBalance*a/p.Pq,c.P[f.lp].quoteDecimal)}}let v=await Promise.all(a.map(f=>f.pTokenV2&&h[f.vault].current.adhocBribesPool!==o.DR?b.readContract({abi:[(0,i.s)("function maxTotalSupply() external view returns (uint256)")],address:h[f.vault].current.adhocBribesPool,functionName:"maxTotalSupply"}):Promise.resolve(0n)));for(let f=0;f<a.length;f++)h[a[f].vault].ytPointsMaxTotalSupply=v[f];return f({bvaults:{...e().bvaults,...h}}),h},updateEpoches=async(a,t)=>{var b;let d=t||n().range(1,parseInt((((null===(b=e().bvaults[a.vault])||void 0===b?void 0:b.epochCount)||0n)+1n).toString())).map(f=>BigInt(f));if(0==d.length)return{};let l=(0,s.B)(),i=await Promise.all(d.map(f=>l.readContract({abi:a.isOld?r.VH:r.Pe,address:a.bQueryAddres,functionName:"queryBVaultEpoch",args:[a.vault,f]}))),o=i.reduce((f,e)=>({...f,["".concat(a.vault,"_").concat(e.epochId.toString())]:e}),{});return f({epoches:{...e().epoches,...o}}),o},updateYTokenSythetic=async a=>{let t=(null==a?void 0:a.map(f=>f.vault))||n().keys(e().bvaults),b=await (0,l._c)(t),d=n().mapValues(b,f=>BigInt(f));return f({yTokenSythetic:{...e().yTokenSythetic,...d}}),d};return{bvaults:{},epoches:{},yTokenSythetic:{},...a,updateBvaults,updateEpoches,updateYTokenSythetic}},sliceLVaultsStore:function(f,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},updateLVaults=async a=>{let t=(0,s.B)();if(0==a.length)return{};let n=await Promise.all(a.map(f=>Promise.all([t.readContract({abi:r.Wn,address:f.vaultQuery,functionName:f.isStable?"getStableVaultState":"getVaultState",args:[f.vault]}),t.readContract({abi:r.WW,address:f.vault,functionName:"assetBalance"}),t.readContract({abi:r.WW,address:f.vault,functionName:"usdTotalSupply"}),t.readContract({abi:r.WW,address:f.vault,functionName:"vaultMode"}),t.readContract({abi:r.WW,address:f.vault,functionName:"paramValue",args:[(0,T.$G)("Y",{size:32})]}),f.ptyPoolBelowAddress?t.readContract({abi:r.aT,address:f.ptyPoolBelowAddress,functionName:"totalStakingBalance"}):Promise.resolve(0n),f.ptyPoolAboveAddress?t.readContract({abi:r.aT,address:f.ptyPoolAboveAddress,functionName:"totalStakingBalance"}):Promise.resolve(0n),f.ptyPoolBelowAddress?t.getBalance({address:f.ptyPoolBelowAddress}):Promise.resolve(0n),t.readContract({abi:r.nq,address:f.assetTokenFeed,functionName:"latestPrice"}),t.readContract({abi:r.WW,address:f.vault,functionName:"paramValue",args:[(0,T.$G)("CircuitBreakPeriod",{size:32})]})]).then(e=>{let[a,t,n,b,d,r,l,i,o,s]=e,u=BigInt(Math.floor(new Date().getTime()/1e3)),c=f.isStable?a.M_USDCx>0n&&a.aar<a.AARS:2==b&&(a.aar>=a.AARC||u-a.AARBelowCircuitBreakerLineTime>s);return{...{...a,isStable:!!f.isStable},assetBalance:t,usbTotalSupply:n,vaultMode:f.isStable?a.aar<a.AARS&&a.M_USDC>0n?2:1:b,Y:d,buyPoolTotalStaking:r,sellPoolTotalStaking:l,buyPoolBalance:i,latestPrice:o*p.Pq/p.pn,CircuitBreakPeriod:s,discountEnable:c}}))),b=n.reduce((f,e,t)=>({...f,[a[t].vault]:e}),{});return f({lvaults:{...e().lvaults,...b}}),b},updateUserLVault=async(a,t)=>{let n=(0,s.B)();if(a.isStable)return;let[b,d,l,i,o,u,c]=await Promise.all([n.readContract({abi:r.aT,address:a.ptyPoolBelowAddress,functionName:"userStakingBalance",args:[t]}),n.readContract({abi:r.aT,address:a.ptyPoolBelowAddress,functionName:"earnedMatchedToken",args:[t]}),n.readContract({abi:r.aT,address:a.ptyPoolBelowAddress,functionName:"earnedStakingYields",args:[t]}).catch(()=>0n),n.readContract({abi:r.aT,address:a.ptyPoolBelowAddress,functionName:"earnedMatchingYields",args:[t]}),n.readContract({abi:r.aT,address:a.ptyPoolAboveAddress,functionName:"userStakingBalance",args:[t]}),n.readContract({abi:r.aT,address:a.ptyPoolAboveAddress,functionName:"earnedMatchedToken",args:[t]}),n.readContract({abi:r.aT,address:a.ptyPoolAboveAddress,functionName:"earnedMatchingYields",args:[t]})]),p={buyPool_userStakingBalance:b,buyPool_earnedMatchedToken:d,buyPool_earnedStakingYields:l,buyPool_earnedMatchingYields:i,sellPool_userStakingBalance:o,sellPool_earnedMatchedToken:u,sellPool_earnedMatchingYields:c};return f({user:{...e().user,[a.vault]:p}}),p};return{lvaults:{},user:{},...a,updateLVaults,updateUserLVault}},sliceLntVaultsStore:function(f,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},updateLntVaults=async a=>{let t=(0,s.B)(),b=await Promise.all(a.map(f=>t.readContract({abi:r.Q3,address:f.queryAddres,functionName:"queryVault",args:[f.vault]}).then(e=>({vault:f.vault,item:e})))),d=await (0,l.Sr)(a.map(f=>f.vault)),i=n().filter(b,f=>null!=f).reduce((f,e)=>({...f,[e.vault]:{...e.item,nftCount:BigInt(d[e.vault]||0)}}),{});return f({vaults:{...e().vaults,...i}}),i},updateEpoches=async(a,t)=>{var b;let d=t||n().range(1,parseInt((((null===(b=e().vaults[a.vault])||void 0===b?void 0:b.epochCount)||0n)+1n).toString())).map(f=>BigInt(f));if(0==d.length)return{};let l=(0,s.B)(),i=await Promise.all(d.map(f=>l.readContract({abi:r.Q3,address:a.queryAddres,functionName:"queryVaultEpoch",args:[a.vault,f]}))),o=i.reduce((f,e)=>({...f,["".concat(a.vault,"_").concat(e.epochId.toString())]:e}),{});return f({epoches:{...e().epoches,...o}}),o},updateUserEpoches=async(a,t)=>{var b;let d=(0,s.B)(),l=n().range(1,parseInt((((null===(b=e().vaults[a.vault])||void 0===b?void 0:b.epochCount)||0n)+1n).toString())).map(f=>BigInt(f));if(l.length>0){let n=await Promise.all(l.map(f=>d.readContract({abi:r.Q3,address:a.queryAddres,functionName:"queryVaultEpochUser",args:[a.vault,f,t]})));return f({userEpoches:{...e().userEpoches,[a.vault]:n}}),n}return[]},updateUserNftStat=async(a,t)=>{let n=await (0,l.mq)(a.vault,t),b=(0,s.B)();if(n.length>0){let t=(await Promise.all(n.map(f=>{let{tokenId:e,stat:t,tx:n}=f;return b.readContract({abi:r.qU,address:a.vault,functionName:"Redeemed"==t?"nftRedeemInfo":"nftDepositInfo",args:[BigInt(e)]}).then(f=>{let e="Redeemed"==t?f.redeemTime:f.depositTime,a=f.claimableTime;return{stat:t,tx:n,nftTokenId:f.nftTokenId,startTime:e,claimableTime:a,claimed:f.claimed}}).catch(f=>null)}))).filter(Boolean);return f({userNftStat:{...e().userNftStat,[a.vault]:t}}),t}return{}};return{vaults:{},epoches:{},userEpoches:{},userNftStat:{},...a,updateLntVaults,updateEpoches,updateUserEpoches,updateUserNftStat}},sliceTokenStore:function(f,e){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},updateTokenTotalSupply=async a=>{if(0==a.length)return{};let t=(0,s.B)(),n=await Promise.all(a.map(f=>f==h.K8?Promise.resolve(0n):t.readContract({abi:v.Wo,address:f,functionName:"totalSupply"}))),b=n.reduce((f,e,t)=>({...f,[a[t]]:e}),{});return f({totalSupply:{...e().totalSupply,...b}}),b},updateTokensBalance=async(a,t)=>{if(0==a.length)return{};let n=(0,s.B)(),b=await Promise.all(a.map(f=>f==h.K8?n.getBalance({address:t}):n.readContract({abi:v.Wo,address:f,functionName:"balanceOf",args:[t]}))),d=b.reduce((f,e,t)=>({...f,[a[t]]:e}),{});return f({balances:{...e().balances,...d}}),d},updateTokenPrices=async a=>{let t=n().groupBy(a,f=>c.P[f]?"lp":"token"),b=t.lp||[];if(0!==b.length){console.info("mlps;",a,b);let f=(0,u.I$)();f.id===u.A2.id||(f.id,u.yg.id)}let d=await (0,l.LJ)(["IP"]);return d.length&&f({prices:{...e().prices,"0x5267F7eE069CEB3D8F1c760c215569b79d0685aD":d[0].price}}),{}},updateDefTokenList=async()=>{let e={[u.yg.id]:"https://hub.berachain.com/internal-env/defaultTokenList.json",[u.A2.id]:"https://raw.githubusercontent.com/berachain/default-lists/main/src/tokens/bartio/defaultTokenList.json"},a=e[(0,u.BV)()];if(!a)return[];let t=await fetch(a).then(f=>f.json()).then(f=>f.tokens.filter(f=>f.chainId===(0,u.BV)()).map(f=>({symbol:f.symbol,address:f.address,decimals:f.decimals,name:f.name,url:(f.logoURI||"").replace("https://https://","https://")})));return localStorage.setItem("catchedDefTokenList_"+(0,u.BV)(),JSON.stringify(t)),f({defTokenList:t}),t},updateNftBalance=async(a,t)=>{let b=await (0,l.ZK)(a,t),d=n().mapValues(b,f=>f.map(f=>BigInt(f)));return f({nftBalance:{...e().nftBalance,...d}}),{}};return{totalSupply:{},updateTokenTotalSupply,balances:{},updateTokensBalance,prices:{"0x549943e04f40284185054145c6E4e9568C1D3241":p.Pq,"0xFCBD14DC51f0A4d49d5E53C2E0950e0bC26d0Dce":p.Pq},updateTokenPrices,defTokenList:(()=>{try{return JSON.parse(localStorage.getItem("catchedDefTokenList_"+(0,u.BV)())||"[]")}catch(f){return[]}})(),updateDefTokenList,nftBalance:{},updateNftBalance,...a}},sliceUserBVaults:(f,e,a)=>{let updateEpoches=async(a,t,n)=>{let b=n.filter(f=>f.epochId>0n);if(0==b.length)return{};let d=(0,s.B)(),l=await Promise.all(b.map(f=>d.readContract({abi:a.isOld?r.VH:r.Pe,address:a.bQueryAddres,functionName:"queryBVaultEpochUser",args:[a.vault,f.epochId,t]})));return f({epoches:{...e().epoches,[a.vault]:l}}),l};return{epoches:{},...a,updateEpoches,reset:()=>f({epoches:{}})}}},{}),B=(0,d.Ue)(g);function useStore(f){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[""],a=B();return(0,b.useMemo)(()=>f(a),e.map(f=>f?n().get(a,f):a))}}}]);